document.addEventListener('DOMContentLoaded', () => {
  const wrapper = document.querySelector('.stars-wrapper');
  console.log('üéØ wrapper –Ω–∞–π–¥–µ–Ω:', wrapper);

  if (!wrapper) {
    console.warn('‚ö†Ô∏è .stars-wrapper –Ω–µ –Ω–∞–π–¥–µ–Ω');
    return;
  }

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ base path
  const repo = window.location.hostname === 'localhost' ? '' : `/${window.location.pathname.split('/')[1]}`;
  const svgPath = `${repo}/img/green-star.svg`;

  fetch(svgPath)
    .then((res) => {
      console.log('üì¶ fetch —Å—Ç–∞—Ç—É—Å:', res.status);
      if (!res.ok) {
        throw new Error(`HTTP –æ—à–∏–±–∫–∞: ${res.status}`);
      }
      return res.text();
    })
    .then((svgText) => {
      console.log('‚úÖ SVG –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ');
      const template = document.createElement('div');
      template.innerHTML = svgText.trim();
      const baseStar = template.querySelector('svg');

      if (!baseStar) {
        console.warn('‚ö†Ô∏è SVG –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç <svg>');
        return;
      }

      function createStar() {
        const star = baseStar.cloneNode(true);
        star.classList.add('animated-star');

        // –†–∞–∑–º–µ—Ä
        const size = 20 + Math.random() * 12; // 20‚Äì32px
        star.style.width = `${size}px`;
        star.style.height = `${size}px`;
        star.setAttribute('width', size);
        star.setAttribute('height', size);

        // –ü–æ—è–≤–ª–µ–Ω–∏–µ ‚Äî –∏–∑ —Ü–µ–Ω—Ç—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ —à–∏—Ä–∏–Ω–µ
        star.style.position = 'absolute';
        star.style.left = `${20 + Math.random() * 60}%`;
        star.style.top = `0`;
        star.style.transform = 'translate(-50%, -50%)';

        // –ê–Ω–∏–º–∞—Ü–∏—è
        const x1 = (Math.random() - 0.5) * 500;
        const x2 = (Math.random() - 0.5) * 800;
        const y = 500 + Math.random() * 300;
        const r = 180 + Math.random() * 360;
        const duration = 5 + Math.random() * 2;

        star.style.setProperty('--x1', `${x1}px`);
        star.style.setProperty('--x2', `${x2}px`);
        star.style.setProperty('--y', `${y}px`);
        star.style.setProperty('--r', `${r}deg`);
        star.style.animation = `fly-wave ${duration}s ease-in-out forwards`;

        wrapper.appendChild(star);
        setTimeout(() => star.remove(), duration * 1000);
      }

      console.log('‚è± setInterval —Å—Ç–∞—Ä—Ç–æ–≤–∞–ª');
      setInterval(() => {
        for (let i = 0; i < 4; i++) {
          createStar();
        }
      }, 200);
    })
    .catch((err) => {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ SVG:', err);
    });
});